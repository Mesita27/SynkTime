-- SynkTime Database Schema
-- MariaDB/MySQL Database Schema for SynkTime Attendance Management System

-- Drop tables if they exist (for clean setup)
-- DROP TABLE IF EXISTS biometric_logs;
-- DROP TABLE IF EXISTS biometric_data;
-- DROP TABLE IF EXISTS asistencias;
-- DROP TABLE IF EXISTS LOG;
-- DROP TABLE IF EXISTS EMPLEADO;
-- DROP TABLE IF EXISTS ESTABLECIMIENTO;
-- DROP TABLE IF EXISTS SEDE;
-- DROP TABLE IF EXISTS EMPRESA;
-- DROP TABLE IF EXISTS usuario;

-- Create EMPRESA table
CREATE TABLE IF NOT EXISTS EMPRESA (
    ID_EMPRESA INT AUTO_INCREMENT PRIMARY KEY,
    NOMBRE VARCHAR(255) NOT NULL,
    RUT VARCHAR(20) UNIQUE,
    DIRECCION TEXT,
    TELEFONO VARCHAR(20),
    EMAIL VARCHAR(100),
    ESTADO ENUM('A', 'I') DEFAULT 'A',
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

-- Create SEDE table
CREATE TABLE IF NOT EXISTS SEDE (
    ID_SEDE INT AUTO_INCREMENT PRIMARY KEY,
    ID_EMPRESA INT NOT NULL,
    NOMBRE VARCHAR(255) NOT NULL,
    DIRECCION TEXT,
    TELEFONO VARCHAR(20),
    ESTADO ENUM('A', 'I') DEFAULT 'A',
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (ID_EMPRESA) REFERENCES EMPRESA(ID_EMPRESA)
);

-- Create ESTABLECIMIENTO table
CREATE TABLE IF NOT EXISTS ESTABLECIMIENTO (
    ID_ESTABLECIMIENTO INT AUTO_INCREMENT PRIMARY KEY,
    ID_SEDE INT NOT NULL,
    NOMBRE VARCHAR(255) NOT NULL,
    DIRECCION TEXT,
    TELEFONO VARCHAR(20),
    ESTADO ENUM('A', 'I') DEFAULT 'A',
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (ID_SEDE) REFERENCES SEDE(ID_SEDE)
);

-- Create EMPLEADO table
CREATE TABLE IF NOT EXISTS EMPLEADO (
    ID_EMPLEADO INT AUTO_INCREMENT PRIMARY KEY,
    ID_ESTABLECIMIENTO INT NOT NULL,
    NOMBRE VARCHAR(100) NOT NULL,
    APELLIDO VARCHAR(100) NOT NULL,
    DNI VARCHAR(20) UNIQUE NOT NULL,
    CORREO VARCHAR(100),
    TELEFONO VARCHAR(20),
    FECHA_INGRESO DATE,
    ESTADO ENUM('A', 'I') DEFAULT 'A',
    ACTIVO ENUM('S', 'N') DEFAULT 'S',
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (ID_ESTABLECIMIENTO) REFERENCES ESTABLECIMIENTO(ID_ESTABLECIMIENTO),
    INDEX idx_empleado_dni (DNI),
    INDEX idx_empleado_establecimiento (ID_ESTABLECIMIENTO)
);

-- Create usuario table (for authentication)
CREATE TABLE IF NOT EXISTS usuario (
    ID_USUARIO INT AUTO_INCREMENT PRIMARY KEY,
    USERNAME VARCHAR(50) UNIQUE NOT NULL,
    CONTRASENA VARCHAR(255) NOT NULL,
    NOMBRE_COMPLETO VARCHAR(200),
    EMAIL VARCHAR(100),
    ROL ENUM('ADMIN', 'GERENTE', 'ASISTENCIA', 'DUEÑO', 'ADMINISTRADOR') DEFAULT 'ASISTENCIA',
    ID_EMPRESA INT NOT NULL,
    ESTADO ENUM('A', 'I') DEFAULT 'A',
    ACTIVO TINYINT(1) DEFAULT 1,
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (ID_EMPRESA) REFERENCES EMPRESA(ID_EMPRESA),
    INDEX idx_usuario_username (USERNAME),
    INDEX idx_usuario_empresa (ID_EMPRESA)
);

-- Create LOG table for audit trails
CREATE TABLE IF NOT EXISTS LOG (
    ID_LOG INT AUTO_INCREMENT PRIMARY KEY,
    ID_USUARIO INT,
    ACCION VARCHAR(100) NOT NULL,
    DETALLE TEXT,
    FECHA_HORA TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    IP_ADDRESS VARCHAR(45),
    USER_AGENT TEXT,
    FOREIGN KEY (ID_USUARIO) REFERENCES usuario(ID_USUARIO),
    INDEX idx_log_usuario (ID_USUARIO),
    INDEX idx_log_fecha (FECHA_HORA),
    INDEX idx_log_accion (ACCION)
);

-- Create asistencias table for attendance records
CREATE TABLE IF NOT EXISTS asistencias (
    ID_ASISTENCIA INT AUTO_INCREMENT PRIMARY KEY,
    ID_EMPLEADO INT NOT NULL,
    FECHA DATE NOT NULL,
    HORA_ENTRADA TIME,
    HORA_SALIDA TIME,
    TIPO ENUM('ENTRADA', 'SALIDA') NOT NULL,
    VERIFICATION_METHOD ENUM('traditional', 'fingerprint', 'facial') DEFAULT 'traditional',
    OBSERVACIONES TEXT,
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (ID_EMPLEADO) REFERENCES EMPLEADO(ID_EMPLEADO),
    INDEX idx_asistencia_empleado (ID_EMPLEADO),
    INDEX idx_asistencia_fecha (FECHA),
    INDEX idx_asistencia_tipo (TIPO),
    UNIQUE KEY unique_employee_date_type (ID_EMPLEADO, FECHA, TIPO)
);

-- Create biometric_data table for storing biometric templates
CREATE TABLE IF NOT EXISTS biometric_data (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    ID_EMPLEADO INT NOT NULL,
    BIOMETRIC_TYPE ENUM('fingerprint', 'facial') NOT NULL,
    FINGER_TYPE VARCHAR(20), -- for fingerprint type (left_thumb, right_index, etc.)
    BIOMETRIC_DATA LONGTEXT, -- base64 encoded biometric template
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    ACTIVO TINYINT(1) DEFAULT 1,
    FOREIGN KEY (ID_EMPLEADO) REFERENCES EMPLEADO(ID_EMPLEADO),
    INDEX idx_biometric_empleado (ID_EMPLEADO),
    INDEX idx_biometric_type (BIOMETRIC_TYPE),
    UNIQUE KEY unique_employee_finger (ID_EMPLEADO, FINGER_TYPE)
);

-- Create biometric_logs table for verification history
CREATE TABLE IF NOT EXISTS biometric_logs (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    ID_EMPLEADO INT NOT NULL,
    VERIFICATION_METHOD ENUM('fingerprint', 'facial', 'traditional') NOT NULL,
    VERIFICATION_SUCCESS TINYINT(1) DEFAULT 0,
    VERIFICATION_SCORE DECIMAL(5,4), -- confidence score (0.0000-1.0000)
    FECHA DATE NOT NULL,
    HORA TIME NOT NULL,
    DEVICE_INFO TEXT, -- information about the device used
    ERROR_MESSAGE TEXT, -- error details if verification failed
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (ID_EMPLEADO) REFERENCES EMPLEADO(ID_EMPLEADO),
    INDEX idx_biometric_logs_empleado (ID_EMPLEADO),
    INDEX idx_biometric_logs_fecha (FECHA),
    INDEX idx_biometric_logs_method (VERIFICATION_METHOD)
);

-- Create horarios table for employee schedules
CREATE TABLE IF NOT EXISTS horarios (
    ID_HORARIO INT AUTO_INCREMENT PRIMARY KEY,
    NOMBRE VARCHAR(100) NOT NULL,
    HORA_ENTRADA TIME NOT NULL,
    HORA_SALIDA TIME NOT NULL,
    DIAS_SEMANA JSON, -- Array of days [1,2,3,4,5] for Mon-Fri
    TOLERANCIA_ENTRADA INT DEFAULT 15, -- minutes
    TOLERANCIA_SALIDA INT DEFAULT 15, -- minutes
    ESTADO ENUM('A', 'I') DEFAULT 'A',
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

-- Create empleado_horarios table for employee-schedule assignments
CREATE TABLE IF NOT EXISTS empleado_horarios (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    ID_EMPLEADO INT NOT NULL,
    ID_HORARIO INT NOT NULL,
    FECHA_INICIO DATE NOT NULL,
    FECHA_FIN DATE,
    ACTIVO TINYINT(1) DEFAULT 1,
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (ID_EMPLEADO) REFERENCES EMPLEADO(ID_EMPLEADO),
    FOREIGN KEY (ID_HORARIO) REFERENCES horarios(ID_HORARIO),
    INDEX idx_empleado_horario_empleado (ID_EMPLEADO),
    INDEX idx_empleado_horario_horario (ID_HORARIO),
    INDEX idx_empleado_horario_activo (ACTIVO)
);

-- Insert sample data if tables are empty
INSERT IGNORE INTO EMPRESA (NOMBRE, RUT, EMAIL, ESTADO) VALUES
('Empresa Demo', '12345678-9', 'admin@empresademo.com', 'A');

INSERT IGNORE INTO SEDE (ID_EMPRESA, NOMBRE, ESTADO) VALUES
(1, 'Sede Principal', 'A');

INSERT IGNORE INTO ESTABLECIMIENTO (ID_SEDE, NOMBRE, ESTADO) VALUES
(1, 'Oficina Central', 'A');

-- Create default admin user (password: admin123)
INSERT IGNORE INTO usuario (USERNAME, CONTRASENA, NOMBRE_COMPLETO, EMAIL, ROL, ID_EMPRESA, ESTADO) VALUES
('admin', '$2y$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi', 'Administrador', 'admin@synktime.com', 'ADMIN', 1, 'A');

-- Insert sample employee
INSERT IGNORE INTO EMPLEADO (ID_ESTABLECIMIENTO, NOMBRE, APELLIDO, DNI, CORREO, FECHA_INGRESO, ESTADO, ACTIVO) VALUES
(1, 'Juan', 'Pérez', '12345678', 'juan.perez@empresa.com', CURDATE(), 'A', 'S');

-- Create sample schedule
INSERT IGNORE INTO horarios (NOMBRE, HORA_ENTRADA, HORA_SALIDA, DIAS_SEMANA) VALUES
('Horario Estándar', '08:00:00', '17:00:00', '[1,2,3,4,5]');